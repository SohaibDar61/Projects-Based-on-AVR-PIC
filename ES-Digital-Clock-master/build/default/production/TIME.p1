Version 4.0 HI-TECH Software Intermediate Code
"12 ./TIME.h
[; ;./TIME.h: 12: typedef struct {
[s S97 `uc 1 `uc 1 `uc 1 ]
[n S97 . secounds minutes hours ]
"16 TIME.c
[; ;TIME.c: 16: static tMode current_mode;
[c E871 0 1 2 .. ]
[n E871 . MODE_NORMAL MODE_ADJUST_MINUTES MODE_ADJUST_HOURS  ]
"82
[; ;TIME.c: 82:             for(index = sw_plus; index < (3); index++){
[c E882 0 1 2 .. ]
[n E882 . sw_plus sw_minus sw_setting  ]
"88
[; ;TIME.c: 88:                         ((switch_getState(sw_plus) == sw_prepressed) && (current_mode != MODE_NORMAL)) ? sw_plus_handler() : 0 ;
[c E887 0 1 2 3 .. ]
[n E887 . sw_released sw_prepressed sw_pressed sw_prereleased  ]
"27 ./SWITCH.h
[; ;./SWITCH.h: 27: tSw_State switch_getState(tSwitch);
[v _switch_getState `(E887 ~T0 @X0 0 ef1`E882 ]
"21 TIME.c
[; ;TIME.c: 21: static void sw_plus_handler(void);
[v _sw_plus_handler `(v ~T0 @X0 0 sf ]
"22
[; ;TIME.c: 22: static void sw_minus_handler(void);
[v _sw_minus_handler `(v ~T0 @X0 0 sf ]
"23
[; ;TIME.c: 23: static void sw_setting_handler(void);
[v _sw_setting_handler `(v ~T0 @X0 0 sf ]
"24
[; ;TIME.c: 24: static void update_current_time(void);
[v _update_current_time `(v ~T0 @X0 0 sf ]
"5 ./config.h
[p x FOSC = HS ]
"6
[p x WDTE = OFF ]
"7
[p x PWRTE = ON ]
"8
[p x BOREN = ON ]
"9
[p x LVP = OFF ]
"10
[p x CPD = OFF ]
"11
[p x WRT = OFF ]
"12
[p x CP = OFF ]
"54 C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 54: __asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
"61
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 61: __asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
"68
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 68: __asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
"75
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 75: __asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
"161
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 161: __asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
"168
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 168: __asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
"218
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 218: __asm("PORTB equ 06h");
[; <" PORTB equ 06h ;# ">
"280
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 280: __asm("PORTC equ 07h");
[; <" PORTC equ 07h ;# ">
"342
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 342: __asm("PORTD equ 08h");
[; <" PORTD equ 08h ;# ">
"404
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 404: __asm("PORTE equ 09h");
[; <" PORTE equ 09h ;# ">
"436
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 436: __asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
"456
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 456: __asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
"534
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 534: __asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
"596
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 596: __asm("PIR2 equ 0Dh");
[; <" PIR2 equ 0Dh ;# ">
"636
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 636: __asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
"643
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 643: __asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
"650
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 650: __asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
"657
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 657: __asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
"732
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 732: __asm("TMR2 equ 011h");
[; <" TMR2 equ 011h ;# ">
"739
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 739: __asm("T2CON equ 012h");
[; <" T2CON equ 012h ;# ">
"810
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 810: __asm("SSPBUF equ 013h");
[; <" SSPBUF equ 013h ;# ">
"817
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 817: __asm("SSPCON equ 014h");
[; <" SSPCON equ 014h ;# ">
"887
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 887: __asm("CCPR1 equ 015h");
[; <" CCPR1 equ 015h ;# ">
"894
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 894: __asm("CCPR1L equ 015h");
[; <" CCPR1L equ 015h ;# ">
"901
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 901: __asm("CCPR1H equ 016h");
[; <" CCPR1H equ 016h ;# ">
"908
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 908: __asm("CCP1CON equ 017h");
[; <" CCP1CON equ 017h ;# ">
"966
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 966: __asm("RCSTA equ 018h");
[; <" RCSTA equ 018h ;# ">
"1061
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 1061: __asm("TXREG equ 019h");
[; <" TXREG equ 019h ;# ">
"1068
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 1068: __asm("RCREG equ 01Ah");
[; <" RCREG equ 01Ah ;# ">
"1075
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 1075: __asm("CCPR2 equ 01Bh");
[; <" CCPR2 equ 01Bh ;# ">
"1082
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 1082: __asm("CCPR2L equ 01Bh");
[; <" CCPR2L equ 01Bh ;# ">
"1089
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 1089: __asm("CCPR2H equ 01Ch");
[; <" CCPR2H equ 01Ch ;# ">
"1096
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 1096: __asm("CCP2CON equ 01Dh");
[; <" CCP2CON equ 01Dh ;# ">
"1154
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 1154: __asm("ADRESH equ 01Eh");
[; <" ADRESH equ 01Eh ;# ">
"1161
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 1161: __asm("ADCON0 equ 01Fh");
[; <" ADCON0 equ 01Fh ;# ">
"1257
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 1257: __asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
"1327
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 1327: __asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
"1377
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 1377: __asm("TRISB equ 086h");
[; <" TRISB equ 086h ;# ">
"1439
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 1439: __asm("TRISC equ 087h");
[; <" TRISC equ 087h ;# ">
"1501
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 1501: __asm("TRISD equ 088h");
[; <" TRISD equ 088h ;# ">
"1563
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 1563: __asm("TRISE equ 089h");
[; <" TRISE equ 089h ;# ">
"1620
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 1620: __asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
"1682
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 1682: __asm("PIE2 equ 08Dh");
[; <" PIE2 equ 08Dh ;# ">
"1722
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 1722: __asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
"1756
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 1756: __asm("SSPCON2 equ 091h");
[; <" SSPCON2 equ 091h ;# ">
"1818
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 1818: __asm("PR2 equ 092h");
[; <" PR2 equ 092h ;# ">
"1825
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 1825: __asm("SSPADD equ 093h");
[; <" SSPADD equ 093h ;# ">
"1832
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 1832: __asm("SSPSTAT equ 094h");
[; <" SSPSTAT equ 094h ;# ">
"2001
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 2001: __asm("TXSTA equ 098h");
[; <" TXSTA equ 098h ;# ">
"2082
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 2082: __asm("SPBRG equ 099h");
[; <" SPBRG equ 099h ;# ">
"2089
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 2089: __asm("CMCON equ 09Ch");
[; <" CMCON equ 09Ch ;# ">
"2159
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 2159: __asm("CVRCON equ 09Dh");
[; <" CVRCON equ 09Dh ;# ">
"2224
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 2224: __asm("ADRESL equ 09Eh");
[; <" ADRESL equ 09Eh ;# ">
"2231
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 2231: __asm("ADCON1 equ 09Fh");
[; <" ADCON1 equ 09Fh ;# ">
"2290
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 2290: __asm("EEDATA equ 010Ch");
[; <" EEDATA equ 010Ch ;# ">
"2297
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 2297: __asm("EEADR equ 010Dh");
[; <" EEADR equ 010Dh ;# ">
"2304
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 2304: __asm("EEDATH equ 010Eh");
[; <" EEDATH equ 010Eh ;# ">
"2311
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 2311: __asm("EEADRH equ 010Fh");
[; <" EEADRH equ 010Fh ;# ">
"2318
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 2318: __asm("EECON1 equ 018Ch");
[; <" EECON1 equ 018Ch ;# ">
"2363
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 2363: __asm("EECON2 equ 018Dh");
[; <" EECON2 equ 018Dh ;# ">
"15 TIME.c
[; ;TIME.c: 15: static tTime current_time;
[v _current_time `S97 ~T0 @X0 1 s ]
"16
[; ;TIME.c: 16: static tMode current_mode;
[v _current_mode `E871 ~T0 @X0 1 s ]
"17
[; ;TIME.c: 17: static tWord current_sec_period;
[v _current_sec_period `us ~T0 @X0 1 s ]
"28
[; ;TIME.c: 28: void time_init(void){
[v _time_init `(v ~T0 @X0 1 ef ]
{
[e :U _time_init ]
[f ]
"32
[; ;TIME.c: 32:     current_time.secounds = 0;
[e = . _current_time 0 -> -> 0 `i `uc ]
"34
[; ;TIME.c: 34:     current_time.minutes = 0;
[e = . _current_time 1 -> -> 0 `i `uc ]
"36
[; ;TIME.c: 36:     current_time.hours = 0;
[e = . _current_time 2 -> -> 0 `i `uc ]
"40
[; ;TIME.c: 40:     current_mode = MODE_NORMAL;
[e = _current_mode . `E871 0 ]
"41
[; ;TIME.c: 41: }
[e :UE 98 ]
}
"43
[; ;TIME.c: 43: void get_time(tTime * time){
[v _get_time `(v ~T0 @X0 1 ef1`*S97 ]
{
[e :U _get_time ]
[v _time `*S97 ~T0 @X0 1 r1 ]
[f ]
"47
[; ;TIME.c: 47:     time->secounds = current_time.secounds;
[e = . *U _time 0 . _current_time 0 ]
"49
[; ;TIME.c: 49:     time->minutes = current_time.minutes;
[e = . *U _time 1 . _current_time 1 ]
"51
[; ;TIME.c: 51:     time->hours = current_time.hours;
[e = . *U _time 2 . _current_time 2 ]
"53
[; ;TIME.c: 53: }
[e :UE 99 ]
}
"54
[; ;TIME.c: 54: void get_mode(tMode * mode){
[v _get_mode `(v ~T0 @X0 1 ef1`*E871 ]
{
[e :U _get_mode ]
[v _mode `*E871 ~T0 @X0 1 r1 ]
[f ]
"58
[; ;TIME.c: 58:     *(mode) = current_mode;
[e = *U _mode _current_mode ]
"59
[; ;TIME.c: 59: }
[e :UE 100 ]
}
"60
[; ;TIME.c: 60: void time_update(void){
[v _time_update `(v ~T0 @X0 1 ef ]
{
[e :U _time_update ]
[f ]
"62
[; ;TIME.c: 62:     static tByte current_period = (0);
[v F914 `uc ~T0 @X0 1 s current_period ]
[i F914
-> -> 0 `i `uc
]
"66
[; ;TIME.c: 66:     current_period = current_period + (5);
[e = F914 -> + -> F914 `i -> 5 `i `uc ]
"68
[; ;TIME.c: 68:     current_sec_period = current_sec_period + (5);
[e = _current_sec_period -> + -> _current_sec_period `ui -> -> 5 `i `ui `us ]
"72
[; ;TIME.c: 72:         if (current_period == (20)){
[e $ ! == -> F914 `i -> 20 `i 102  ]
{
"76
[; ;TIME.c: 76:             current_period = (0);
[e = F914 -> -> 0 `i `uc ]
"80
[; ;TIME.c: 80:             tByte index = 0;
[v _index `uc ~T0 @X0 1 a ]
[e = _index -> -> 0 `i `uc ]
"82
[; ;TIME.c: 82:             for(index = sw_plus; index < (3); index++){
{
[e = _index -> . `E882 0 `uc ]
[e $ < -> _index `i -> 3 `i 103  ]
[e $U 104  ]
[e :U 103 ]
{
"84
[; ;TIME.c: 84:                 switch(index){
[e $U 107  ]
{
"85
[; ;TIME.c: 85:                     case sw_plus :
[e :U 108 ]
"88
[; ;TIME.c: 88:                         ((switch_getState(sw_plus) == sw_prepressed) && (current_mode != MODE_NORMAL)) ? sw_plus_handler() : 0 ;
[e ? && == -> ( _switch_getState (1 . `E882 0 `ui -> . `E887 1 `ui != -> _current_mode `ui -> . `E871 0 `ui : ( _sw_plus_handler ..  -> -> 0 `i `v ]
"90
[; ;TIME.c: 90:                         break;
[e $U 106  ]
"92
[; ;TIME.c: 92:                      case sw_minus :
[e :U 109 ]
"95
[; ;TIME.c: 95:                         ((switch_getState(sw_minus) == sw_prepressed) && (current_mode != MODE_NORMAL)) ? sw_minus_handler() : 0 ;
[e ? && == -> ( _switch_getState (1 . `E882 1 `ui -> . `E887 1 `ui != -> _current_mode `ui -> . `E871 0 `ui : ( _sw_minus_handler ..  -> -> 0 `i `v ]
"97
[; ;TIME.c: 97:                         break;
[e $U 106  ]
"99
[; ;TIME.c: 99:                      case sw_setting :
[e :U 110 ]
"102
[; ;TIME.c: 102:                         (switch_getState(sw_setting) == sw_prepressed) ? sw_setting_handler() : 0 ;
[e ? == -> ( _switch_getState (1 . `E882 2 `ui -> . `E887 1 `ui : ( _sw_setting_handler ..  -> -> 0 `i `v ]
"104
[; ;TIME.c: 104:                         break;
[e $U 106  ]
"106
[; ;TIME.c: 106:                     default :
[e :U 111 ]
"108
[; ;TIME.c: 108:                         break;
[e $U 106  ]
"109
[; ;TIME.c: 109:                 }
}
[e $U 106  ]
[e :U 107 ]
[e [\ -> _index `i , $ . `E882 0 108
 , $ . `E882 1 109
 , $ . `E882 2 110
 111 ]
[e :U 106 ]
"111
[; ;TIME.c: 111:             }
}
[e ++ _index -> -> 1 `i `uc ]
[e $ < -> _index `i -> 3 `i 103  ]
[e :U 104 ]
}
"115
[; ;TIME.c: 115:                     update_current_time();
[e ( _update_current_time ..  ]
"117
[; ;TIME.c: 117:         }else {
}
[e $U 112  ]
[e :U 102 ]
{
"119
[; ;TIME.c: 119:         }
}
[e :U 112 ]
"120
[; ;TIME.c: 120: }
[e :UE 101 ]
}
"125
[; ;TIME.c: 125: static void sw_plus_handler(void){
[v _sw_plus_handler `(v ~T0 @X0 1 sf ]
{
[e :U _sw_plus_handler ]
[f ]
"128
[; ;TIME.c: 128:     switch(current_mode){
[e $U 115  ]
{
"130
[; ;TIME.c: 130:         case MODE_ADJUST_HOURS:
[e :U 116 ]
"131
[; ;TIME.c: 131:             current_time.hours = (current_time.hours + 1) % (24);
[e = . _current_time 2 -> % + -> . _current_time 2 `i -> 1 `i -> 24 `i `uc ]
"132
[; ;TIME.c: 132:             break;
[e $U 114  ]
"133
[; ;TIME.c: 133:         case MODE_ADJUST_MINUTES:
[e :U 117 ]
"134
[; ;TIME.c: 134:             current_time.minutes = (current_time.minutes + 1) % (60);
[e = . _current_time 1 -> % + -> . _current_time 1 `i -> 1 `i -> 60 `i `uc ]
"135
[; ;TIME.c: 135:             break;
[e $U 114  ]
"136
[; ;TIME.c: 136:         default :
[e :U 118 ]
"138
[; ;TIME.c: 138:             break;
[e $U 114  ]
"139
[; ;TIME.c: 139:     }
}
[e $U 114  ]
[e :U 115 ]
[e [\ -> _current_mode `ui , $ -> . `E871 2 `ui 116
 , $ -> . `E871 1 `ui 117
 118 ]
[e :U 114 ]
"140
[; ;TIME.c: 140: }
[e :UE 113 ]
}
"142
[; ;TIME.c: 142: static void sw_minus_handler(void){
[v _sw_minus_handler `(v ~T0 @X0 1 sf ]
{
[e :U _sw_minus_handler ]
[f ]
"143
[; ;TIME.c: 143:     switch(current_mode){
[e $U 121  ]
{
"145
[; ;TIME.c: 145:         case MODE_ADJUST_HOURS:
[e :U 122 ]
"146
[; ;TIME.c: 146:             current_time.hours--;
[e -- . _current_time 2 -> -> 1 `i `uc ]
"147
[; ;TIME.c: 147:             if(current_time.hours == 255){current_time.hours = (24) - 1;}
[e $ ! == -> . _current_time 2 `i -> 255 `i 123  ]
{
[e = . _current_time 2 -> - -> 24 `i -> 1 `i `uc ]
}
[e :U 123 ]
"149
[; ;TIME.c: 149:             break;
[e $U 120  ]
"150
[; ;TIME.c: 150:         case MODE_ADJUST_MINUTES:
[e :U 124 ]
"151
[; ;TIME.c: 151:             current_time.minutes--;
[e -- . _current_time 1 -> -> 1 `i `uc ]
"152
[; ;TIME.c: 152:             if(current_time.minutes == 255 ){ current_time.minutes = (60) - 1;}
[e $ ! == -> . _current_time 1 `i -> 255 `i 125  ]
{
[e = . _current_time 1 -> - -> 60 `i -> 1 `i `uc ]
}
[e :U 125 ]
"154
[; ;TIME.c: 154:             break;
[e $U 120  ]
"155
[; ;TIME.c: 155:         default :
[e :U 126 ]
"157
[; ;TIME.c: 157:             break;
[e $U 120  ]
"158
[; ;TIME.c: 158:     }
}
[e $U 120  ]
[e :U 121 ]
[e [\ -> _current_mode `ui , $ -> . `E871 2 `ui 122
 , $ -> . `E871 1 `ui 124
 126 ]
[e :U 120 ]
"159
[; ;TIME.c: 159: }
[e :UE 119 ]
}
"161
[; ;TIME.c: 161: static void sw_setting_handler(void){
[v _sw_setting_handler `(v ~T0 @X0 1 sf ]
{
[e :U _sw_setting_handler ]
[f ]
"163
[; ;TIME.c: 163:     switch(current_mode){
[e $U 129  ]
{
"165
[; ;TIME.c: 165:         case MODE_NORMAL :
[e :U 130 ]
"167
[; ;TIME.c: 167:             current_mode = MODE_ADJUST_HOURS;
[e = _current_mode . `E871 2 ]
"169
[; ;TIME.c: 169:             break;
[e $U 128  ]
"171
[; ;TIME.c: 171:         case MODE_ADJUST_HOURS :
[e :U 131 ]
"173
[; ;TIME.c: 173:             current_mode = MODE_ADJUST_MINUTES;
[e = _current_mode . `E871 1 ]
"175
[; ;TIME.c: 175:             break;
[e $U 128  ]
"177
[; ;TIME.c: 177:         case MODE_ADJUST_MINUTES :
[e :U 132 ]
"179
[; ;TIME.c: 179:             current_mode = MODE_NORMAL;
[e = _current_mode . `E871 0 ]
"181
[; ;TIME.c: 181:             current_time.secounds = (0);
[e = . _current_time 0 -> -> 0 `i `uc ]
"183
[; ;TIME.c: 183:             current_sec_period = (0);
[e = _current_sec_period -> -> 0 `i `us ]
"185
[; ;TIME.c: 185:             break;
[e $U 128  ]
"187
[; ;TIME.c: 187:         default :
[e :U 133 ]
"189
[; ;TIME.c: 189:             break;
[e $U 128  ]
"191
[; ;TIME.c: 191:     }
}
[e $U 128  ]
[e :U 129 ]
[e [\ -> _current_mode `ui , $ -> . `E871 0 `ui 130
 , $ -> . `E871 2 `ui 131
 , $ -> . `E871 1 `ui 132
 133 ]
[e :U 128 ]
"192
[; ;TIME.c: 192: }
[e :UE 127 ]
}
"194
[; ;TIME.c: 194: static void update_current_time(void){
[v _update_current_time `(v ~T0 @X0 1 sf ]
{
[e :U _update_current_time ]
[f ]
"196
[; ;TIME.c: 196:     if( ( current_mode == MODE_NORMAL ) && ( current_sec_period >= (1000) )){
[e $ ! && == -> _current_mode `ui -> . `E871 0 `ui >= -> _current_sec_period `ui -> -> 1000 `i `ui 135  ]
{
"197
[; ;TIME.c: 197:         current_sec_period = (0);
[e = _current_sec_period -> -> 0 `i `us ]
"198
[; ;TIME.c: 198:         current_time.secounds++;
[e ++ . _current_time 0 -> -> 1 `i `uc ]
"200
[; ;TIME.c: 200:         if(current_time.secounds == (60)){
[e $ ! == -> . _current_time 0 `i -> 60 `i 136  ]
{
"201
[; ;TIME.c: 201:             current_time.secounds = (0);
[e = . _current_time 0 -> -> 0 `i `uc ]
"202
[; ;TIME.c: 202:             current_time.minutes++;
[e ++ . _current_time 1 -> -> 1 `i `uc ]
"203
[; ;TIME.c: 203:             if(current_time.minutes == (60)){
[e $ ! == -> . _current_time 1 `i -> 60 `i 137  ]
{
"204
[; ;TIME.c: 204:                 current_time.minutes = (0);
[e = . _current_time 1 -> -> 0 `i `uc ]
"205
[; ;TIME.c: 205:                 current_time.hours++;
[e ++ . _current_time 2 -> -> 1 `i `uc ]
"206
[; ;TIME.c: 206:             }else { }
}
[e $U 138  ]
[e :U 137 ]
{
}
[e :U 138 ]
"208
[; ;TIME.c: 208:             current_time.hours = current_time.hours % (24);
[e = . _current_time 2 -> % -> . _current_time 2 `i -> 24 `i `uc ]
"209
[; ;TIME.c: 209:         }else { }
}
[e $U 139  ]
[e :U 136 ]
{
}
[e :U 139 ]
"210
[; ;TIME.c: 210:     }else {
}
[e $U 140  ]
[e :U 135 ]
{
"212
[; ;TIME.c: 212:     }
}
[e :U 140 ]
"213
[; ;TIME.c: 213: }
[e :UE 134 ]
}
