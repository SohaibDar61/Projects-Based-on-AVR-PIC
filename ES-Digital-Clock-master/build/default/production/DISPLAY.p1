Version 4.0 HI-TECH Software Intermediate Code
"12 ./TIME.h
[; ;./TIME.h: 12: typedef struct {
[s S97 `uc 1 `uc 1 `uc 1 ]
[n S97 . secounds minutes hours ]
"10 DISPLAY.c
[; ;DISPLAY.c: 10: static tMode display_mode;
[c E871 0 1 2 .. ]
[n E871 . MODE_NORMAL MODE_ADJUST_MINUTES MODE_ADJUST_HOURS  ]
"25 ./TIME.h
[; ;./TIME.h: 25: void get_time(tTime * time);
[v _get_time `(v ~T0 @X0 0 ef1`*S97 ]
"22 DISPLAY.c
[; ;DISPLAY.c: 22:     ssd_init(ssd_minute_units);
[c E895 0 1 2 3 .. ]
[n E895 . ssd_minute_units ssd_minute_tens ssd_hour_units ssd_hour_tens  ]
"38 ./SSD.h
[; ;./SSD.h: 38: void ssd_init(tSSD);
[v _ssd_init `(v ~T0 @X0 0 ef1`E895 ]
"27 DISPLAY.c
[; ;DISPLAY.c: 27:     ssd_setSymbol(ssd_minute_units , display_time.minutes % 10);
[c E882 0 1 2 3 4 5 6 7 8 9 10 .. ]
[n E882 . SSD_0 SSD_1 SSD_2 SSD_3 SSD_4 SSD_5 SSD_6 SSD_7 SSD_8 SSD_9 SSD_NULL  ]
"39 ./SSD.h
[; ;./SSD.h: 39: void ssd_setSymbol(tSSD, tSSD_SYMBOL);
[v _ssd_setSymbol `(v ~T0 @X0 0 ef2`E895`E882 ]
"31 DISPLAY.c
[; ;DISPLAY.c: 31:     ssdDot_setState(DOT_OFF);
[c E901 0 1 .. ]
[n E901 . DOT_OFF DOT_ON  ]
"43 ./SSD.h
[; ;./SSD.h: 43: void ssdDot_setState(tDotState state);
[v _ssdDot_setState `(v ~T0 @X0 0 ef1`E901 ]
"26 ./TIME.h
[; ;./TIME.h: 26: void get_mode(tMode * mode);
[v _get_mode `(v ~T0 @X0 0 ef1`*E871 ]
"14 DISPLAY.c
[; ;DISPLAY.c: 14: static void normal_mode_display(void);
[v _normal_mode_display `(v ~T0 @X0 0 sf ]
"15
[; ;DISPLAY.c: 15: static void adjust_hours_mode_display(void);
[v _adjust_hours_mode_display `(v ~T0 @X0 0 sf ]
"16
[; ;DISPLAY.c: 16: static void adjust_minutes_mode_display(void);
[v _adjust_minutes_mode_display `(v ~T0 @X0 0 sf ]
"44 ./SSD.h
[; ;./SSD.h: 44: tDotState ssdDot_getState();
[v _ssdDot_getState `(E901 ~T0 @X0 0 e? ]
"40
[; ;./SSD.h: 40: tSSD_SYMBOL ssd_getSymbol(tSSD);
[v _ssd_getSymbol `(E882 ~T0 @X0 0 ef1`E895 ]
"5 ./config.h
[p x FOSC = HS ]
"6
[p x WDTE = OFF ]
"7
[p x PWRTE = ON ]
"8
[p x BOREN = ON ]
"9
[p x LVP = OFF ]
"10
[p x CPD = OFF ]
"11
[p x WRT = OFF ]
"12
[p x CP = OFF ]
"54 C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 54: __asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
"61
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 61: __asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
"68
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 68: __asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
"75
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 75: __asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
"161
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 161: __asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
"168
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 168: __asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
"218
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 218: __asm("PORTB equ 06h");
[; <" PORTB equ 06h ;# ">
"280
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 280: __asm("PORTC equ 07h");
[; <" PORTC equ 07h ;# ">
"342
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 342: __asm("PORTD equ 08h");
[; <" PORTD equ 08h ;# ">
"404
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 404: __asm("PORTE equ 09h");
[; <" PORTE equ 09h ;# ">
"436
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 436: __asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
"456
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 456: __asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
"534
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 534: __asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
"596
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 596: __asm("PIR2 equ 0Dh");
[; <" PIR2 equ 0Dh ;# ">
"636
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 636: __asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
"643
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 643: __asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
"650
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 650: __asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
"657
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 657: __asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
"732
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 732: __asm("TMR2 equ 011h");
[; <" TMR2 equ 011h ;# ">
"739
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 739: __asm("T2CON equ 012h");
[; <" T2CON equ 012h ;# ">
"810
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 810: __asm("SSPBUF equ 013h");
[; <" SSPBUF equ 013h ;# ">
"817
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 817: __asm("SSPCON equ 014h");
[; <" SSPCON equ 014h ;# ">
"887
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 887: __asm("CCPR1 equ 015h");
[; <" CCPR1 equ 015h ;# ">
"894
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 894: __asm("CCPR1L equ 015h");
[; <" CCPR1L equ 015h ;# ">
"901
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 901: __asm("CCPR1H equ 016h");
[; <" CCPR1H equ 016h ;# ">
"908
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 908: __asm("CCP1CON equ 017h");
[; <" CCP1CON equ 017h ;# ">
"966
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 966: __asm("RCSTA equ 018h");
[; <" RCSTA equ 018h ;# ">
"1061
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 1061: __asm("TXREG equ 019h");
[; <" TXREG equ 019h ;# ">
"1068
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 1068: __asm("RCREG equ 01Ah");
[; <" RCREG equ 01Ah ;# ">
"1075
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 1075: __asm("CCPR2 equ 01Bh");
[; <" CCPR2 equ 01Bh ;# ">
"1082
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 1082: __asm("CCPR2L equ 01Bh");
[; <" CCPR2L equ 01Bh ;# ">
"1089
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 1089: __asm("CCPR2H equ 01Ch");
[; <" CCPR2H equ 01Ch ;# ">
"1096
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 1096: __asm("CCP2CON equ 01Dh");
[; <" CCP2CON equ 01Dh ;# ">
"1154
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 1154: __asm("ADRESH equ 01Eh");
[; <" ADRESH equ 01Eh ;# ">
"1161
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 1161: __asm("ADCON0 equ 01Fh");
[; <" ADCON0 equ 01Fh ;# ">
"1257
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 1257: __asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
"1327
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 1327: __asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
"1377
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 1377: __asm("TRISB equ 086h");
[; <" TRISB equ 086h ;# ">
"1439
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 1439: __asm("TRISC equ 087h");
[; <" TRISC equ 087h ;# ">
"1501
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 1501: __asm("TRISD equ 088h");
[; <" TRISD equ 088h ;# ">
"1563
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 1563: __asm("TRISE equ 089h");
[; <" TRISE equ 089h ;# ">
"1620
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 1620: __asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
"1682
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 1682: __asm("PIE2 equ 08Dh");
[; <" PIE2 equ 08Dh ;# ">
"1722
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 1722: __asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
"1756
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 1756: __asm("SSPCON2 equ 091h");
[; <" SSPCON2 equ 091h ;# ">
"1818
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 1818: __asm("PR2 equ 092h");
[; <" PR2 equ 092h ;# ">
"1825
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 1825: __asm("SSPADD equ 093h");
[; <" SSPADD equ 093h ;# ">
"1832
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 1832: __asm("SSPSTAT equ 094h");
[; <" SSPSTAT equ 094h ;# ">
"2001
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 2001: __asm("TXSTA equ 098h");
[; <" TXSTA equ 098h ;# ">
"2082
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 2082: __asm("SPBRG equ 099h");
[; <" SPBRG equ 099h ;# ">
"2089
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 2089: __asm("CMCON equ 09Ch");
[; <" CMCON equ 09Ch ;# ">
"2159
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 2159: __asm("CVRCON equ 09Dh");
[; <" CVRCON equ 09Dh ;# ">
"2224
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 2224: __asm("ADRESL equ 09Eh");
[; <" ADRESL equ 09Eh ;# ">
"2231
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 2231: __asm("ADCON1 equ 09Fh");
[; <" ADCON1 equ 09Fh ;# ">
"2290
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 2290: __asm("EEDATA equ 010Ch");
[; <" EEDATA equ 010Ch ;# ">
"2297
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 2297: __asm("EEADR equ 010Dh");
[; <" EEADR equ 010Dh ;# ">
"2304
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 2304: __asm("EEDATH equ 010Eh");
[; <" EEDATH equ 010Eh ;# ">
"2311
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 2311: __asm("EEADRH equ 010Fh");
[; <" EEADRH equ 010Fh ;# ">
"2318
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 2318: __asm("EECON1 equ 018Ch");
[; <" EECON1 equ 018Ch ;# ">
"2363
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 2363: __asm("EECON2 equ 018Dh");
[; <" EECON2 equ 018Dh ;# ">
"9 DISPLAY.c
[; ;DISPLAY.c: 9: static tTime display_time;
[v _display_time `S97 ~T0 @X0 1 s ]
"10
[; ;DISPLAY.c: 10: static tMode display_mode;
[v _display_mode `E871 ~T0 @X0 1 s ]
"11
[; ;DISPLAY.c: 11: static tWord dot_blink_counter = (0);
[v _dot_blink_counter `us ~T0 @X0 1 s ]
[i _dot_blink_counter
-> -> 0 `i `us
]
"12
[; ;DISPLAY.c: 12: static tWord mode_blink_counter = (0);
[v _mode_blink_counter `us ~T0 @X0 1 s ]
[i _mode_blink_counter
-> -> 0 `i `us
]
"18
[; ;DISPLAY.c: 18: void display_init(void){
[v _display_init `(v ~T0 @X0 1 ef ]
{
[e :U _display_init ]
[f ]
"20
[; ;DISPLAY.c: 20:     get_time(&display_time);
[e ( _get_time (1 &U _display_time ]
"22
[; ;DISPLAY.c: 22:     ssd_init(ssd_minute_units);
[e ( _ssd_init (1 . `E895 0 ]
"23
[; ;DISPLAY.c: 23:     ssd_init(ssd_minute_tens);
[e ( _ssd_init (1 . `E895 1 ]
"24
[; ;DISPLAY.c: 24:     ssd_init(ssd_hour_units);
[e ( _ssd_init (1 . `E895 2 ]
"25
[; ;DISPLAY.c: 25:     ssd_init(ssd_hour_tens);
[e ( _ssd_init (1 . `E895 3 ]
"27
[; ;DISPLAY.c: 27:     ssd_setSymbol(ssd_minute_units , display_time.minutes % 10);
[e ( _ssd_setSymbol (2 , . `E895 0 -> % -> . _display_time 1 `i -> 10 `i `E882 ]
"28
[; ;DISPLAY.c: 28:     ssd_setSymbol(ssd_minute_tens , display_time.minutes / 10);
[e ( _ssd_setSymbol (2 , . `E895 1 -> / -> . _display_time 1 `i -> 10 `i `E882 ]
"29
[; ;DISPLAY.c: 29:     ssd_setSymbol(ssd_hour_units , display_time.hours % 10);
[e ( _ssd_setSymbol (2 , . `E895 2 -> % -> . _display_time 2 `i -> 10 `i `E882 ]
"30
[; ;DISPLAY.c: 30:     ssd_setSymbol(ssd_hour_tens , display_time.hours / 10);
[e ( _ssd_setSymbol (2 , . `E895 3 -> / -> . _display_time 2 `i -> 10 `i `E882 ]
"31
[; ;DISPLAY.c: 31:     ssdDot_setState(DOT_OFF);
[e ( _ssdDot_setState (1 . `E901 0 ]
"32
[; ;DISPLAY.c: 32: }
[e :UE 98 ]
}
"34
[; ;DISPLAY.c: 34: void display_update(void){
[v _display_update `(v ~T0 @X0 1 ef ]
{
[e :U _display_update ]
[f ]
"36
[; ;DISPLAY.c: 36:     static tByte current_disp_period = (0);
[v F928 `uc ~T0 @X0 1 s current_disp_period ]
[i F928
-> -> 0 `i `uc
]
"39
[; ;DISPLAY.c: 39:     current_disp_period += (5);
[e =+ F928 -> -> 5 `i `uc ]
"40
[; ;DISPLAY.c: 40:     dot_blink_counter += (5);
[e =+ _dot_blink_counter -> -> 5 `i `us ]
"41
[; ;DISPLAY.c: 41:     mode_blink_counter += (5);
[e =+ _mode_blink_counter -> -> 5 `i `us ]
"43
[; ;DISPLAY.c: 43:     if(current_disp_period < (20)){
[e $ ! < -> F928 `i -> 20 `i 100  ]
{
"44
[; ;DISPLAY.c: 44:         return;
[e $UE 99  ]
"45
[; ;DISPLAY.c: 45:     }
}
[e :U 100 ]
"47
[; ;DISPLAY.c: 47:     current_disp_period = (0);
[e = F928 -> -> 0 `i `uc ]
"50
[; ;DISPLAY.c: 50:     get_time(&display_time);
[e ( _get_time (1 &U _display_time ]
"51
[; ;DISPLAY.c: 51:     get_mode(&display_mode);
[e ( _get_mode (1 &U _display_mode ]
"54
[; ;DISPLAY.c: 54:     switch(display_mode){
[e $U 102  ]
{
"56
[; ;DISPLAY.c: 56:         case MODE_NORMAL :
[e :U 103 ]
"58
[; ;DISPLAY.c: 58:             normal_mode_display();
[e ( _normal_mode_display ..  ]
"60
[; ;DISPLAY.c: 60:             break;
[e $U 101  ]
"62
[; ;DISPLAY.c: 62:         case MODE_ADJUST_HOURS :
[e :U 104 ]
"64
[; ;DISPLAY.c: 64:             adjust_hours_mode_display();
[e ( _adjust_hours_mode_display ..  ]
"66
[; ;DISPLAY.c: 66:             break;
[e $U 101  ]
"68
[; ;DISPLAY.c: 68:         case MODE_ADJUST_MINUTES :
[e :U 105 ]
"70
[; ;DISPLAY.c: 70:             adjust_minutes_mode_display();
[e ( _adjust_minutes_mode_display ..  ]
"72
[; ;DISPLAY.c: 72:         break;
[e $U 101  ]
"74
[; ;DISPLAY.c: 74:         default :
[e :U 106 ]
"76
[; ;DISPLAY.c: 76:             break;
[e $U 101  ]
"77
[; ;DISPLAY.c: 77:     }
}
[e $U 101  ]
[e :U 102 ]
[e [\ -> _display_mode `ui , $ -> . `E871 0 `ui 103
 , $ -> . `E871 2 `ui 104
 , $ -> . `E871 1 `ui 105
 106 ]
[e :U 101 ]
"78
[; ;DISPLAY.c: 78: }
[e :UE 99 ]
}
"80
[; ;DISPLAY.c: 80: static void normal_mode_display(void){
[v _normal_mode_display `(v ~T0 @X0 1 sf ]
{
[e :U _normal_mode_display ]
[f ]
"81
[; ;DISPLAY.c: 81:     ssd_setSymbol(ssd_minute_units , display_time.minutes % 10);
[e ( _ssd_setSymbol (2 , . `E895 0 -> % -> . _display_time 1 `i -> 10 `i `E882 ]
"82
[; ;DISPLAY.c: 82:     ssd_setSymbol(ssd_minute_tens , display_time.minutes / 10);
[e ( _ssd_setSymbol (2 , . `E895 1 -> / -> . _display_time 1 `i -> 10 `i `E882 ]
"83
[; ;DISPLAY.c: 83:     ssd_setSymbol(ssd_hour_units , display_time.hours % 10);
[e ( _ssd_setSymbol (2 , . `E895 2 -> % -> . _display_time 2 `i -> 10 `i `E882 ]
"84
[; ;DISPLAY.c: 84:     ssd_setSymbol(ssd_hour_tens , display_time.hours / 10);
[e ( _ssd_setSymbol (2 , . `E895 3 -> / -> . _display_time 2 `i -> 10 `i `E882 ]
"85
[; ;DISPLAY.c: 85:     if(dot_blink_counter == (1000)){
[e $ ! == -> _dot_blink_counter `ui -> -> 1000 `i `ui 108  ]
{
"86
[; ;DISPLAY.c: 86:         dot_blink_counter = (0);
[e = _dot_blink_counter -> -> 0 `i `us ]
"87
[; ;DISPLAY.c: 87:         ssdDot_setState(!ssdDot_getState());
[e ( _ssdDot_setState (1 -> -> ! != -> ( _ssdDot_getState ..  `ui -> -> 0 `i `ui `i `E901 ]
"88
[; ;DISPLAY.c: 88:     }
}
[e :U 108 ]
"89
[; ;DISPLAY.c: 89:     mode_blink_counter = (0);
[e = _mode_blink_counter -> -> 0 `i `us ]
"90
[; ;DISPLAY.c: 90: }
[e :UE 107 ]
}
"92
[; ;DISPLAY.c: 92: static void adjust_hours_mode_display(void){
[v _adjust_hours_mode_display `(v ~T0 @X0 1 sf ]
{
[e :U _adjust_hours_mode_display ]
[f ]
"93
[; ;DISPLAY.c: 93:     ssd_setSymbol(ssd_minute_units , display_time.minutes % 10);
[e ( _ssd_setSymbol (2 , . `E895 0 -> % -> . _display_time 1 `i -> 10 `i `E882 ]
"94
[; ;DISPLAY.c: 94:     ssd_setSymbol(ssd_minute_tens , display_time.minutes / 10);
[e ( _ssd_setSymbol (2 , . `E895 1 -> / -> . _display_time 1 `i -> 10 `i `E882 ]
"95
[; ;DISPLAY.c: 95:     ssdDot_setState(DOT_OFF);
[e ( _ssdDot_setState (1 . `E901 0 ]
"97
[; ;DISPLAY.c: 97:     if(mode_blink_counter == (500)){
[e $ ! == -> _mode_blink_counter `ui -> -> 500 `i `ui 110  ]
{
"98
[; ;DISPLAY.c: 98:         mode_blink_counter = (0);
[e = _mode_blink_counter -> -> 0 `i `us ]
"99
[; ;DISPLAY.c: 99:         if(ssd_getSymbol(ssd_hour_units) == SSD_NULL){
[e $ ! == -> ( _ssd_getSymbol (1 . `E895 2 `ui -> . `E882 10 `ui 111  ]
{
"100
[; ;DISPLAY.c: 100:             ssd_setSymbol(ssd_hour_units , display_time.hours % 10);
[e ( _ssd_setSymbol (2 , . `E895 2 -> % -> . _display_time 2 `i -> 10 `i `E882 ]
"101
[; ;DISPLAY.c: 101:             ssd_setSymbol(ssd_hour_tens , display_time.hours / 10);
[e ( _ssd_setSymbol (2 , . `E895 3 -> / -> . _display_time 2 `i -> 10 `i `E882 ]
"102
[; ;DISPLAY.c: 102:         }else {
}
[e $U 112  ]
[e :U 111 ]
{
"103
[; ;DISPLAY.c: 103:             ssd_setSymbol(ssd_hour_units , SSD_NULL);
[e ( _ssd_setSymbol (2 , . `E895 2 . `E882 10 ]
"104
[; ;DISPLAY.c: 104:             ssd_setSymbol(ssd_hour_tens , SSD_NULL);
[e ( _ssd_setSymbol (2 , . `E895 3 . `E882 10 ]
"105
[; ;DISPLAY.c: 105:         }
}
[e :U 112 ]
"106
[; ;DISPLAY.c: 106:     }else { }
}
[e $U 113  ]
[e :U 110 ]
{
}
[e :U 113 ]
"107
[; ;DISPLAY.c: 107:     dot_blink_counter = (0);
[e = _dot_blink_counter -> -> 0 `i `us ]
"108
[; ;DISPLAY.c: 108: }
[e :UE 109 ]
}
"110
[; ;DISPLAY.c: 110: static void adjust_minutes_mode_display(void){
[v _adjust_minutes_mode_display `(v ~T0 @X0 1 sf ]
{
[e :U _adjust_minutes_mode_display ]
[f ]
"112
[; ;DISPLAY.c: 112:     ssd_setSymbol(ssd_hour_units , display_time.hours % 10);
[e ( _ssd_setSymbol (2 , . `E895 2 -> % -> . _display_time 2 `i -> 10 `i `E882 ]
"113
[; ;DISPLAY.c: 113:     ssd_setSymbol(ssd_hour_tens , display_time.hours / 10);
[e ( _ssd_setSymbol (2 , . `E895 3 -> / -> . _display_time 2 `i -> 10 `i `E882 ]
"114
[; ;DISPLAY.c: 114:     ssdDot_setState(DOT_OFF);
[e ( _ssdDot_setState (1 . `E901 0 ]
"116
[; ;DISPLAY.c: 116:     if(mode_blink_counter == (500)){
[e $ ! == -> _mode_blink_counter `ui -> -> 500 `i `ui 115  ]
{
"117
[; ;DISPLAY.c: 117:         mode_blink_counter = (0);
[e = _mode_blink_counter -> -> 0 `i `us ]
"118
[; ;DISPLAY.c: 118:         if(ssd_getSymbol(ssd_minute_units) == SSD_NULL){
[e $ ! == -> ( _ssd_getSymbol (1 . `E895 0 `ui -> . `E882 10 `ui 116  ]
{
"119
[; ;DISPLAY.c: 119:             ssd_setSymbol(ssd_minute_units , display_time.minutes % 10);
[e ( _ssd_setSymbol (2 , . `E895 0 -> % -> . _display_time 1 `i -> 10 `i `E882 ]
"120
[; ;DISPLAY.c: 120:             ssd_setSymbol(ssd_minute_tens , display_time.minutes / 10);
[e ( _ssd_setSymbol (2 , . `E895 1 -> / -> . _display_time 1 `i -> 10 `i `E882 ]
"121
[; ;DISPLAY.c: 121:         }else {
}
[e $U 117  ]
[e :U 116 ]
{
"122
[; ;DISPLAY.c: 122:             ssd_setSymbol(ssd_minute_units , SSD_NULL);
[e ( _ssd_setSymbol (2 , . `E895 0 . `E882 10 ]
"123
[; ;DISPLAY.c: 123:             ssd_setSymbol(ssd_minute_tens , SSD_NULL);
[e ( _ssd_setSymbol (2 , . `E895 1 . `E882 10 ]
"124
[; ;DISPLAY.c: 124:         }
}
[e :U 117 ]
"125
[; ;DISPLAY.c: 125:     }else { }
}
[e $U 118  ]
[e :U 115 ]
{
}
[e :U 118 ]
"127
[; ;DISPLAY.c: 127:     dot_blink_counter = (0);
[e = _dot_blink_counter -> -> 0 `i `us ]
"128
[; ;DISPLAY.c: 128: }
[e :UE 114 ]
}
